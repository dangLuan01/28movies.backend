name: CI/CD PHP App

on:
  push:
    branches: [ "main" ]
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: üöÄ Deploy to VPS
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          echo "üîÑ Pulling latest code ..."
          cd /home/${{secrets.HOME_USER}}/movie28/28movies.backend
          git reset --hard
          git pull origin main
          echo "üê≥ Restarting Docker ontainers...."
          docker compose build
          docker compose up -d --remove-orphans
          echo "‚úÖ Deploy complete!"
    - name: üì¢ Notify to Telegram
      run: |
        curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
        -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -d parse_mode=Markdown \
        -d text="‚úÖ *Deploy th√†nh c√¥ng!* \nRepo: \`${{ github.repository }}\`\nBranch: \`${{ github.ref_name }}\`\nCommit: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})"
